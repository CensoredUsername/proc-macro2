error[E0277]: `proc_macro::Span` cannot be sent between threads safely
 --> test-not-send.rs:5:21
  |
5 |     requires_send::<Span>();
  |                     ^^^^ `proc_macro::Span` cannot be sent between threads safely
  |
  = help: within `Span`, the trait `Send` is not implemented for `proc_macro::Span`
  = note: consider using `std::sync::Arc<proc_macro::Span>`; for more information visit <https://doc.rust-lang.org/book/ch16-03-shared-state.html>
note: required because it appears within the type `Span`
 --> $WORKSPACE/src/wrapper.rs
  |
  | pub(crate) enum Span {
  |                 ^^^^
note: required because it appears within the type `Span`
 --> $WORKSPACE/src/lib.rs
  |
  | pub struct Span {
  |            ^^^^
note: required by a bound in `requires_send`
 --> test-not-send.rs:4:25
  |
4 |     fn requires_send<T: Send>() {}
  |                         ^^^^ required by this bound in `requires_send`

error[E0277]: `Rc<()>` cannot be sent between threads safely
 --> test-not-send.rs:5:21
  |
5 |     requires_send::<Span>();
  |                     ^^^^ `Rc<()>` cannot be sent between threads safely
  |
  = help: within `Span`, the trait `Send` is not implemented for `Rc<()>`
  = note: use `std::sync::Arc` instead of `std::rc::Rc`
note: required because it appears within the type `ProcMacroAutoTraits`
 --> $WORKSPACE/src/marker.rs
  |
  | pub(crate) struct ProcMacroAutoTraits(Rc<()>);
  |                   ^^^^^^^^^^^^^^^^^^^
note: required because it appears within the type `PhantomData<ProcMacroAutoTraits>`
 --> $RUST/core/src/marker.rs
  |
  | pub struct PhantomData<T: ?Sized>;
  |            ^^^^^^^^^^^
note: required because it appears within the type `Span`
 --> $WORKSPACE/src/lib.rs
  |
  | pub struct Span {
  |            ^^^^
note: required by a bound in `requires_send`
 --> test-not-send.rs:4:25
  |
4 |     fn requires_send<T: Send>() {}
  |                         ^^^^ required by this bound in `requires_send`
